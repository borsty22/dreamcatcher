<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>edu.htwberlin.magw</groupId>
	<artifactId>dreamcatcher-web</artifactId>
	<packaging>war</packaging>
	<version>1.0.0</version>
	<name>Vaadin Web Application</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<vaadin.version>6.7.2</vaadin.version>
		<gwt.version>2.3.0</gwt.version>
		<gwt.plugin.version>2.2.0</gwt.plugin.version>

		<aspectj.version>1.6.10</aspectj.version>
		<aspectj-maven-plugin.version>1.3.1</aspectj-maven-plugin.version>
		<slf4j.version>1.6.1</slf4j.version>
		<gwt.version>2.3.0</gwt.version>
		<gwt.plugin.version>2.2.0</gwt.plugin.version>
		<spring.version>3.0.6.RELEASE</spring.version>
		<jpa.version>2.0.0</jpa.version>
		<junit.version>4.8</junit.version>
		<hibernate.version>3.6.7.Final</hibernate.version>

		<jetty.version>6.1.24</jetty.version>
		<jersey.version>1.10</jersey.version>
	</properties>

	<!-- If a new widgetset is added, run 'mvn -Pcompile-widgetset clean package' -->
	<profiles>
		<profile>
			<id>compile-widgetset</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<source>1.5</source>
							<target>1.5</target>
						</configuration>
						<version>2.3</version>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>aspectj-maven-plugin</artifactId>
						<version>${aspectj-maven-plugin.version}</version>
						<configuration>
							<!-- Required as the plugin does not resolve this by default -->
							<source>1.6</source>
							<target>1.6</target>
							<aspectLibraries>
								<aspectLibrary>
									<groupId>org.springframework</groupId>
									<artifactId>spring-aspects</artifactId>
								</aspectLibrary>
							</aspectLibraries>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>compile</goal>
									<goal>test-compile</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- Compiles your custom GWT components with the GWT compiler -->
					<!-- A hosted mode browser for client-side widget debugging can be run 
						with the goal gwt:run after uncommenting the correct line below. A remote 
						debugger can then be connected to port 8998. Note that e.g. a Jetty server 
						should be running with the server side parts - use the goal jetty:run . -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>gwt-maven-plugin</artifactId>
						<version>${gwt.plugin.version}</version>
						<configuration>
							<!-- if you don't specify any modules, the plugin will find them -->
							<!-- <modules> <module>edu.htwberlin.magw.gwt.ColorPickerWidgetSet</module> 
								</modules> -->
							<!-- <webappDirectory>${project.build.directory}/${project.build.finalName}/VAADIN/widgetsets</webappDirectory> -->
							<webappDirectory>src/main/webapp/VAADIN/widgetsets</webappDirectory>
							<!-- On Mac running Snow Leopard, add "-d32" -->
							<!-- This causes error messages (but build works) in phase "package": 
								two processes would use the same debug port -->
							<!--extraJvmArgs>-Xmx512M -Xss1024k -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8998</extraJvmArgs -->
							<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
							<runTarget>dreamcatcher-web</runTarget>
							<hostedWebapp>${project.build.directory}/${project.build.finalName}</hostedWebapp>
							<noServer>true</noServer>
							<port>8080</port>
							<compileReport>false</compileReport>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>resources</goal>
									<goal>compile</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>com.google.gwt</groupId>
								<artifactId>gwt-dev</artifactId>
								<version>${gwt.version}</version>
							</dependency>
							<dependency>
								<groupId>com.google.gwt</groupId>
								<artifactId>gwt-user</artifactId>
								<version>${gwt.version}</version>
							</dependency>
						</dependencies>
					</plugin>
					<plugin>
						<groupId>com.vaadin</groupId>
						<artifactId>vaadin-maven-plugin</artifactId>
						<version>1.0.2</version>

						<executions>
							<execution>
								<configuration>
								</configuration>
								<goals>
									<goal>update-widgetset</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- A simple Jetty test server at http://localhost:8080/dreamcatcher-web 
						can be launched with the Maven goal jetty:run and stopped with jetty:stop -->
					<plugin>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>maven-jetty-plugin</artifactId>
						<version>${jetty.version}</version>
						<configuration>
							<stopPort>9966</stopPort>
							<stopKey>dreamcatcher-web</stopKey>
							<!-- Redeploy every x seconds if changes are detected, 0 for no automatic 
								redeployment -->
							<scanIntervalSeconds>0</scanIntervalSeconds>
							<!-- make sure Jetty also finds the widgetset -->
							<webAppConfig>
								<contextPath>/dreamcatcher-web</contextPath>
								<baseResource implementation="org.mortbay.resource.ResourceCollection">
									<!-- Workaround for Maven/Jetty issue http://jira.codehaus.org/browse/JETTY-680 -->
									<!-- <resources>src/main/webapp,${project.build.directory}/${project.build.finalName}</resources> -->
									<resourcesAsCSV>src/main/webapp,${project.build.directory}/${project.build.finalName}</resourcesAsCSV>
								</baseResource>
							</webAppConfig>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>tomcat-maven-plugin</artifactId>
						<version>1.2-SNAPSHOT</version>
						<configuration>
							<url>http://141.45.146.176:8080/manager/html</url>
							<server>pompadour</server>
							<path>/dreamcatcher</path>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
	<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<source>1.5</source>
							<target>1.5</target>
						</configuration>
						<version>2.3</version>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>aspectj-maven-plugin</artifactId>
						<version>${aspectj-maven-plugin.version}</version>
						<configuration>
							<!-- Required as the plugin does not resolve this by default -->
							<source>1.6</source>
							<target>1.6</target>
							<aspectLibraries>
								<aspectLibrary>
									<groupId>org.springframework</groupId>
									<artifactId>spring-aspects</artifactId>
								</aspectLibrary>
							</aspectLibraries>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>compile</goal>
									<goal>test-compile</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- A simple Jetty test server at http://localhost:8080/dreamcatcher-web 
						can be launched with the Maven goal jetty:run and stopped with jetty:stop -->
					<plugin>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>maven-jetty-plugin</artifactId>
						<version>${jetty.version}</version>
						<configuration>
							<stopPort>9966</stopPort>
							<stopKey>dreamcatcher-web</stopKey>
							<!-- Redeploy every x seconds if changes are detected, 0 for no automatic 
								redeployment -->
							<scanIntervalSeconds>0</scanIntervalSeconds>
							<!-- make sure Jetty also finds the widgetset -->
							<webAppConfig>
								<contextPath>/dreamcatcher-web</contextPath>
								<baseResource implementation="org.mortbay.resource.ResourceCollection">
									<!-- Workaround for Maven/Jetty issue http://jira.codehaus.org/browse/JETTY-680 -->
									<!-- <resources>src/main/webapp,${project.build.directory}/${project.build.finalName}</resources> -->
									<resourcesAsCSV>src/main/webapp,${project.build.directory}/${project.build.finalName}</resourcesAsCSV>
								</baseResource>
							</webAppConfig>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>tomcat-maven-plugin</artifactId>
						<version>1.2-SNAPSHOT</version>
						<configuration>
							<url>http://141.45.146.176:8080/manager/html</url>
							<server>pompadour</server>
							<path>/dreamcatcher</path>
						</configuration>
					</plugin>
				</plugins>
			</build>

	<repositories>
		<repository>
			<id>vaadin-snapshots</id>
			<url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>codehaus-snapshots</id>
			<url>http://nexus.codehaus.org/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
		<pluginRepository>
			<id>vaadin-snapshots</id>
			<url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>invient-charts</artifactId>
			<version>0.8.5</version>
		</dependency>

		<!-- This is also used by gwt-maven-plugin to deduce GWT version number. -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
			<!-- <scope>provided</scope> -->
		</dependency>

		<!-- SPRING DEPENDENCY -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-instrument</artifactId>
			<version>${spring.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>1.0.1.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
			<optional>true</optional>
		</dependency>

		<!-- AspectJ dependencies -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj.version}</version>
		</dependency>

		<!-- LOGGING DEPENDENCIES - LOG4J -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
		</dependency>

		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>8.4-702.jdbc3</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<version>1.0.0.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.0.2.GA</version>
			<!-- <scope>runtime</scope> -->
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
			<!-- <scope>provided</scope> -->
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>org.jasypt</groupId>
			<artifactId>jasypt</artifactId>
			<version>1.8</version>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.0</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time-hibernate</artifactId>
			<version>1.3</version>
			<type>jar</type>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<artifactId>hibernate</artifactId>
					<groupId>hibernate</groupId>
				</exclusion>
				<exclusion>
					<groupId>joda-time</groupId>
					<artifactId>joda-time</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-collections</groupId>
					<artifactId>commons-collections</artifactId>
				</exclusion>
				<exclusion>
					<groupId>hsqldb</groupId>
					<artifactId>hsqldb</artifactId>
				</exclusion>
				<exclusion>
					<groupId>ehcache</groupId>
					<artifactId>ehcache</artifactId>
				</exclusion>
				<exclusion>
					<groupId>dom4j</groupId>
					<artifactId>dom4j</artifactId>
				</exclusion>
				<exclusion>
					<groupId>cglib</groupId>
					<artifactId>cglib-full</artifactId>
				</exclusion>
				<exclusion>
					<groupId>antlr</groupId>
					<artifactId>antlr</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.2.2</version>
		</dependency>

		<!-- Jersy JAX-RS -->
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-json</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-spring</artifactId>
			<version>${jersey.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-web</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.jersey-test-framework</groupId>
			<artifactId>jersey-test-framework-core</artifactId>
			<version>${jersey.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.jersey-test-framework</groupId>
			<artifactId>jersey-test-framework-external</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1</version>
		</dependency>
	</dependencies>
</project>
